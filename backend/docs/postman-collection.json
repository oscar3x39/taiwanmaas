{
  "info": {
    "name": "台灣智慧交通路線規劃 API",
    "description": "🤖 AI-Assisted Development Showcase\n\n完整的台灣交通路線規劃 API 測試集合，展示現代 Node.js 後端開發技能。",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "1.0.0"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "系統監控",
      "item": [
        {
          "name": "健康檢查",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/health",
              "host": ["{{baseUrl}}"],
              "path": ["health"]
            },
            "description": "檢查 API 服務狀態"
          },
          "response": []
        },
        {
          "name": "API 資訊",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api",
              "host": ["{{baseUrl}}"],
              "path": ["api"]
            },
            "description": "獲取 API 版本和端點資訊"
          },
          "response": []
        }
      ]
    },
    {
      "name": "路線計算",
      "item": [
        {
          "name": "基本路線查詢",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"origin\": {\n    \"latitude\": 25.0478,\n    \"longitude\": 121.5170\n  },\n  \"destination\": {\n    \"latitude\": 25.0340,\n    \"longitude\": 121.5645\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/routes",
              "host": ["{{baseUrl}}"],
              "path": ["api", "routes"]
            },
            "description": "台北車站到台北101的基本路線查詢"
          },
          "response": []
        },
        {
          "name": "帶偏好設定的路線查詢",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"origin\": {\n    \"latitude\": 25.0478,\n    \"longitude\": 121.5170\n  },\n  \"destination\": {\n    \"latitude\": 25.0340,\n    \"longitude\": 121.5645\n  },\n  \"preferences\": {\n    \"prioritize\": \"time\",\n    \"maxWalkingDistance\": 800,\n    \"avoidModes\": [\"bus\"],\n    \"departureTime\": \"2024-01-01T09:00:00.000Z\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/routes",
              "host": ["{{baseUrl}}"],
              "path": ["api", "routes"]
            },
            "description": "帶有偏好設定的路線查詢，優先考慮時間，避免公車"
          },
          "response": []
        },
        {
          "name": "跨縣市路線查詢",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"origin\": {\n    \"latitude\": 25.0478,\n    \"longitude\": 121.5170\n  },\n  \"destination\": {\n    \"latitude\": 24.1369,\n    \"longitude\": 120.6861\n  },\n  \"preferences\": {\n    \"prioritize\": \"cost\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/routes",
              "host": ["{{baseUrl}}"],
              "path": ["api", "routes"]
            },
            "description": "台北到台中的跨縣市路線查詢"
          },
          "response": []
        },
        {
          "name": "路線服務統計",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/routes/stats",
              "host": ["{{baseUrl}}"],
              "path": ["api", "routes", "stats"]
            },
            "description": "獲取路線計算服務的統計資訊"
          },
          "response": []
        }
      ]
    },
    {
      "name": "地點服務",
      "item": [
        {
          "name": "搜尋地點",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/locations/search?q=台北車站&limit=5",
              "host": ["{{baseUrl}}"],
              "path": ["api", "locations", "search"],
              "query": [
                {
                  "key": "q",
                  "value": "台北車站"
                },
                {
                  "key": "limit",
                  "value": "5"
                }
              ]
            },
            "description": "搜尋台北車站相關地點"
          },
          "response": []
        },
        {
          "name": "帶座標的地點搜尋",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/locations/search?q=咖啡廳&lat=25.0478&lng=121.5170&radius=1000&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["api", "locations", "search"],
              "query": [
                {
                  "key": "q",
                  "value": "咖啡廳"
                },
                {
                  "key": "lat",
                  "value": "25.0478"
                },
                {
                  "key": "lng",
                  "value": "121.5170"
                },
                {
                  "key": "radius",
                  "value": "1000"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            },
            "description": "在台北車站附近搜尋咖啡廳"
          },
          "response": []
        },
        {
          "name": "反向地理編碼",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"latitude\": 25.0478,\n  \"longitude\": 121.5170\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/locations/reverse-geocode",
              "host": ["{{baseUrl}}"],
              "path": ["api", "locations", "reverse-geocode"]
            },
            "description": "將座標轉換為地址資訊"
          },
          "response": []
        },
        {
          "name": "地理編碼",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"address\": \"台北車站\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/locations/geocode",
              "host": ["{{baseUrl}}"],
              "path": ["api", "locations", "geocode"]
            },
            "description": "將地址轉換為座標資訊"
          },
          "response": []
        },
        {
          "name": "尋找附近交通站點",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"coordinates\": {\n    \"latitude\": 25.0478,\n    \"longitude\": 121.5170\n  },\n  \"maxDistance\": 1000,\n  \"limit\": 10\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/locations/nearby-stations",
              "host": ["{{baseUrl}}"],
              "path": ["api", "locations", "nearby-stations"]
            },
            "description": "尋找指定座標附近的交通站點"
          },
          "response": []
        },
        {
          "name": "台灣城市列表",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/locations/cities",
              "host": ["{{baseUrl}}"],
              "path": ["api", "locations", "cities"]
            },
            "description": "獲取台灣主要城市和熱門景點資訊"
          },
          "response": []
        },
        {
          "name": "所有交通站點",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/locations/stations",
              "host": ["{{baseUrl}}"],
              "path": ["api", "locations", "stations"]
            },
            "description": "獲取所有交通站點列表"
          },
          "response": []
        },
        {
          "name": "捷運站點",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/locations/stations?mode=mrt",
              "host": ["{{baseUrl}}"],
              "path": ["api", "locations", "stations"],
              "query": [
                {
                  "key": "mode",
                  "value": "mrt"
                }
              ]
            },
            "description": "獲取捷運站點列表"
          },
          "response": []
        },
        {
          "name": "高鐵站點",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/locations/stations?mode=hsr",
              "host": ["{{baseUrl}}"],
              "path": ["api", "locations", "stations"],
              "query": [
                {
                  "key": "mode",
                  "value": "hsr"
                }
              ]
            },
            "description": "獲取高鐵站點列表"
          },
          "response": []
        }
      ]
    },
    {
      "name": "錯誤測試",
      "item": [
        {
          "name": "無效座標測試",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"origin\": {\n    \"latitude\": 999,\n    \"longitude\": 999\n  },\n  \"destination\": {\n    \"latitude\": 25.0340,\n    \"longitude\": 121.5645\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/routes",
              "host": ["{{baseUrl}}"],
              "path": ["api", "routes"]
            },
            "description": "測試無效座標的錯誤處理"
          },
          "response": []
        },
        {
          "name": "缺少必要參數測試",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"origin\": {\n    \"latitude\": 25.0478,\n    \"longitude\": 121.5170\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/routes",
              "host": ["{{baseUrl}}"],
              "path": ["api", "routes"]
            },
            "description": "測試缺少 destination 參數的錯誤處理"
          },
          "response": []
        },
        {
          "name": "404 端點測試",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/nonexistent",
              "host": ["{{baseUrl}}"],
              "path": ["api", "nonexistent"]
            },
            "description": "測試不存在端點的 404 錯誤"
          },
          "response": []
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// 設定請求時間戳",
          "pm.globals.set('timestamp', new Date().toISOString());"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// 基本回應檢查",
          "pm.test('Status code is success', function () {",
          "    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
          "});",
          "",
          "pm.test('Response time is less than 5000ms', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(5000);",
          "});",
          "",
          "pm.test('Response has correct content type', function () {",
          "    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
          "});",
          "",
          "// 成功回應格式檢查",
          "if (pm.response.code === 200) {",
          "    pm.test('Response has success field', function () {",
          "        const jsonData = pm.response.json();",
          "        pm.expect(jsonData).to.have.property('success');",
          "        pm.expect(jsonData).to.have.property('timestamp');",
          "    });",
          "}"
        ]
      }
    }
  ]
}